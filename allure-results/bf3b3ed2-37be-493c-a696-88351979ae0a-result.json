{"name": "Sauce Demo - Verify Prices", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 2 ]\n\n1. Exception:  9.99 is less than 10\nFail in \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\tests\\verifications.py:15\" verify_items()\n\n2. Exception:  7.99 is less than 10\nFail in \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\tests\\verifications.py:15\" verify_items()", "trace": "self = <tests.test_sauce_po.Test_Sauce_Demo object at 0x00000215A08A7310>\n\n    @allure.title(\"Sauce Demo - Verify Prices\")\n    @allure.description(\"This test verify each price is less than expected price \")\n    def test03_items_prices(self):\n        prices = self.home.get_items_prices()\n>       Verifications.verify_items(prices, self.expected_minimum_price)\n\ntests\\test_sauce_po.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests\\verifications.py:16: in verify_items\n    verify_expectations()\nvenv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:24: in verify_expectations\n    report_exceptions()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def report_exceptions():\n        global failed_conditions\n        if failed_conditions:\n            report = ['Failed conditions count: [ {} ]\\n'.format(len(failed_conditions))]\n            for index, failure in enumerate(failed_conditions, start=1):\n                if len(failed_conditions) > 1:\n                    report.append('{}. {}'.format(index, failure))\n                else:\n                    report.append(failure)\n            failed_conditions = []\n>           raise AssertionError('\\n'.join(report))\nE           AssertionError: Failed conditions count: [ 2 ]\nE           \nE           1. Exception:  9.99 is less than 10\nE           Fail in \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\tests\\verifications.py:15\" verify_items()\nE           \nE           2. Exception:  7.99 is less than 10\nE           Fail in \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\tests\\verifications.py:15\" verify_items()\n\nvenv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py:43: AssertionError"}, "description": "This test verify each price is less than expected price ", "steps": [{"name": "return the item's prices", "status": "passed", "start": 1742727087529, "stop": 1742727087754}, {"name": "Verify prices", "status": "failed", "statusDetails": {"message": "AssertionError: Failed conditions count: [ 2 ]\n\n1. Exception:  9.99 is less than 10\nFail in \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\tests\\verifications.py:15\" verify_items()\n\n2. Exception:  7.99 is less than 10\nFail in \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\tests\\verifications.py:15\" verify_items()\n\n", "trace": "  File \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\tests\\verifications.py\", line 16, in verify_items\n    verify_expectations()\n  File \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 24, in verify_expectations\n    report_exceptions()\n  File \"C:\\Users\\97250\\Documents\\PlaywrightPython\\Digital\\test_automation\\venv\\Lib\\site-packages\\smart_assertions\\smart_assertions.py\", line 43, in report_exceptions\n    raise AssertionError('\\n'.join(report))\n"}, "parameters": [{"name": "prices", "value": "[29.99, 9.99, 15.99, 49.99, 7.99, 15.99]"}, {"name": "expected_min", "value": "10"}], "start": 1742727087754, "stop": 1742727087794}], "start": 1742727087529, "stop": 1742727087795, "uuid": "7372e335-6fa5-4855-b935-caacd91e1129", "testCaseId": "57ab605c7b194b6d41a719e57d7e24dd", "fullName": "tests.test_sauce_po.Test_Sauce_Demo#test03_items_prices"}